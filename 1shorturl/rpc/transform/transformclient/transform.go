// Code generated by goctl. DO NOT EDIT.
// Source: transform.proto

package transformclient

import (
	"context"

	"shorturl/rpc/transform/types/transform"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RealUrlToShortLinkReq  = transform.RealUrlToShortLinkReq
	RealUrlToShortLinkResp = transform.RealUrlToShortLinkResp
	ShortLinkToRealUrlReq  = transform.ShortLinkToRealUrlReq
	ShortLinkToRealUrlResp = transform.ShortLinkToRealUrlResp

	Transform interface {
		// 根据真实的url返回短连接
		GetShortLinkByRealUrl(ctx context.Context, in *RealUrlToShortLinkReq, opts ...grpc.CallOption) (*RealUrlToShortLinkResp, error)
		// 根据短连接返回真实的url
		GetRealUrlByShortLink(ctx context.Context, in *ShortLinkToRealUrlReq, opts ...grpc.CallOption) (*ShortLinkToRealUrlResp, error)
	}

	defaultTransform struct {
		cli zrpc.Client
	}
)

func NewTransform(cli zrpc.Client) Transform {
	return &defaultTransform{
		cli: cli,
	}
}

// 根据真实的url返回短连接
func (m *defaultTransform) GetShortLinkByRealUrl(ctx context.Context, in *RealUrlToShortLinkReq, opts ...grpc.CallOption) (*RealUrlToShortLinkResp, error) {
	client := transform.NewTransformClient(m.cli.Conn())
	return client.GetShortLinkByRealUrl(ctx, in, opts...)
}

// 根据短连接返回真实的url
func (m *defaultTransform) GetRealUrlByShortLink(ctx context.Context, in *ShortLinkToRealUrlReq, opts ...grpc.CallOption) (*ShortLinkToRealUrlResp, error) {
	client := transform.NewTransformClient(m.cli.Conn())
	return client.GetRealUrlByShortLink(ctx, in, opts...)
}
